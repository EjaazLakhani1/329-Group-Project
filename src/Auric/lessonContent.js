export const introAuric = "What is a website and how are they made? \n \n \nA website is a group of connected web pages (individual documents that a browser displays), that performs a specific task or service and is hosted on the internet so that anybody with an internet connection can visit it. Websites are created by programmers usually through three different coding languages: HTML (Allows creators to display words on their webpages), CSS (adds style to the page so that it looks more appealing), Javascript (adds animations, dynamic movement and much more). These three languages work together in order to create a functional, interesting and visually appeasing website. This is the front end of websites. There is also another side to websites which is the back-end, this is simply how data from the website gets stored and allows the website to have features including user accounts and downloadable content.\n \n \nHow do vulnurable websites Come to be?\n \n \nWebsite vulnurabilities are mainly a result of human error when the website is being initially created. As stated above there are two main sides to website development. The majority of easy to exploit vulnurabilities come from the front end where the developer forgets to hide certain sections of their website that are used for storage of passwords,debugging (fixing issues), and other sensitive information. Other frequent causes of vulnurable websites are security misconfigurations which include using previously exploited software on a website and broken authentication (easy to impersionate accounts/steal data from these accounts).\n \n \nWhy are vulnurable websites dangerous?\n \n \nThe vulnurabilities as described above can allow malicious people such as hackers to exploit these vulnurabilities in order for their own personal gain (mostly monetary gain but can also be simply for emotional gain). Websites that contain sensitive information (addresses, names, phone numbers) about users and that are vulnurable can have all of this information leaked if a hacker is able to exploit the website. This sensitive information can then be sold to third parties for money and this information could put users of the website in jepordy. This is the most severe case but there are also lesser but still serious cases where vulnurabilities such as security misconfigurations (described above), are used in order to completely take down a website which causes the loss of money to the website creators as well as anybody else who gains money from the website (hackers sometimes do this simply for emotional pleasure without any monetary gain)." 

export const basic = "Why do Attackers Exploit Websites?\n \n \nAs explained in lesson 1, hackers main exploit websites for monetary gain, happiness/pleasure, or for personal vendattas. Now that the WHY has been explained, we are going to dive into the HOW aka how these hackers actually exploit these websites to extract sensitive information to use.\n \n \nThere are three important beginner techniques that we will be going over. They are: Developer Tools, Path Traverals, and Brute Force Attacks\n \n \nDevloper Tools\n \n \nThis technique involves using browser provided tools to inspect a certain webpages code (HTML, CSS, javascript from section 1), alter this code if possible, and alter the functionality of this code in order to discover content on a website that is not normally visible on a webpage. Developer tools are used most frequently when a hacker knows that the information that they are looking for is hidden on the web page that they are currently looking at (either hidden in code or on the webpage itself but not visible).\n \n \nPath Traverals\n \n \nPath traversals are essentially like following a hidden treasure map to find sensitive information that has been hidden in files and folders related to the website that cannot be normally accessed. These hidden files/folders contain information that is needed for the proper function of websites but can be used to exploit a website if they are found. Path traversals are essentially just specifying a directory after an website address in order to travel to a file or folder that the web developer created and attempted to hide from general users.\n \n \nBrute Force Attacks\n \n \nBrute force attacks are used mainly in finding valid usernames and passwords on websites based off of past informations. During brute force attacks on a login system, hundreds or even thousands of usernames and passwords are attempted on a website in order to attempt to gain access to an account. The usernames and passwords that are tested are ones that are very common and have been breached before. This is because the most common usernames and passwords are the ones most likely to be credentials for accounts on the website that is being attacked.\nThese techniques help hackers exploit websites with weaker security, and they are simple enough for beginners to learn them and begin with web exploitation themselves (ethically of course). Now we will deep dive into one of these techniques so that you can perfom an attack yourself!"

export const deep = "What Technique Will We Focus On?\n \n \nWe will be focusing on devloper tools which are essential to nearly all types of web exploitation and are immediately avalible through a browser so no extra setup is required.\n \n \nSetup\n \n \nEnsure that you have a stable internet connection. Then simply download any web browser of your choosing. (Chrome is the most simplistic).\n \n \nHow Do You Perform This Technique? \n \n \nThe first step to use developer tools is actually navigate to the web page on the website that you intend to exploit. This is the page that you believe holds hidden information that you are attempting to reach. Next, you will have to actually open the developer tools console. The easiest way to do this across all browsers and OS’s is to right click on the web page, and then click on the “Inspect option” near the bottom of the pop up menu. After this you will finally see the developer tools console with many different tabs at the top. We will be focusing mainly on the “Elements” and “Sources” tab as they are usually the holders of exploitable informaiton.\n \n \nWhat To Look For \n \n \nThe elements tab contains the html code (discussed in part 1) of the current web page which can be used to find things that arent normally visible on the web page. The most important things to look for in this section are links to other web pages that cant normally be accessed and comments that the developer made that can be exploited. The sources tab contains the actual files and folders that the developer has made which allows for more information to be accessed (css and javascript files are just an example). This is the most vulnurable section for web developers as sensitive folders and files that they forgot to hide can be directly accessed and that information can be retrived. For both of the Elements and Sources tabs, it is important to look thoroughly at each line of code and each folder/file to ensure that you do not miss anything and are able to find the information that you are looking for."